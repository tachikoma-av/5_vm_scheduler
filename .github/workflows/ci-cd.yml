
name: CI/CD Pipeline for VM Scheduling Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify your Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Install test dependencies
      - name: Install test dependencies
        run: |
          pip install -r test_requirements.txt

      # Step 5: Run tests and log output
      - name: Run tests and log output
        run: |
          mkdir -p logs
          python -m pytest --junitxml=logs/test-results.xml
        continue-on-error: true  # Optional: Continue even if tests fail

      # Step 6: Archive logs as artifacts
      - name: Upload test logs
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: logs/
